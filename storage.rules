rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Règles pour les fichiers des patients
    match /files/patients/{patientId}/{fileName} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == patientId ||
         resource.metadata.uploadedBy == request.auth.uid ||
         request.auth.token.role == 'admin');
    }

    // Règles pour les fichiers des rendez-vous
    match /files/appointments/{appointmentId}/{fileName} {
      allow read, write: if request.auth != null && 
        (resource.metadata.uploadedBy == request.auth.uid ||
         request.auth.token.role == 'admin');
    }

    // Règles pour les documents médicaux
    match /files/medical/{category}/{fileName} {
      allow read, write: if request.auth != null && 
        (resource.metadata.uploadedBy == request.auth.uid ||
         request.auth.token.role == 'admin');
    }

    // Règles pour les images de profil
    match /files/profiles/{userId}/{fileName} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == userId ||
         request.auth.token.role == 'admin');
    }

    // Règles pour les fichiers temporaires
    match /files/temp/{userId}/{fileName} {
      allow read, write: if request.auth != null && 
        request.auth.uid == userId;
    }

    // Règles pour les exports et rapports
    match /files/exports/{userId}/{fileName} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == userId ||
         request.auth.token.role == 'admin');
    }

    // Règles par défaut - refuser tout accès non autorisé
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
